diff a/webapp/src/routes/[[lang]]/my/profile/_partials/userWebauthn.svelte b/webapp/src/routes/[[lang]]/my/profile/_partials/userWebauthn.svelte	(rejected hunks)
@@ -1,77 +1,84 @@
 <script lang="ts">
-	import {
-		registerUser,
-		isWebauthnSupported,
-		isPlatformAuthenticatorAvailable
-	} from '$lib/webauthn';
-	import { currentUser } from '$lib/pocketbase';
-
-	import { Collections, type WebauthnCredentialsResponse } from '$lib/pocketbase/types';
-	import { CollectionManager, DeleteRecord, EditRecord } from '$lib/collectionManager';
-
-	import { InformationCircle, Plus } from 'svelte-heros-v2';
-	import { Alert, Button, Card, Heading, P, Spinner } from 'flowbite-svelte';
-	import { createTypeProp } from '$lib/utils/typeProp';
+	import { registerUser, isWebauthnSupported, isPlatformAuthenticatorAvailable } from '@/webauthn';
+	import { currentUser } from '@/pocketbase';
+	import { CollectionManager, RecordDelete, RecordEdit } from '@/collections-components/manager';
+	import T from '@/components/custom/t.svelte';
+	import { m } from '@/i18n';
+	import Separator from '@/components/ui/separator/separator.svelte';
+	import Button from '@/components/ui/button/button.svelte';
+	import Icon from '@/components/custom/icon.svelte';
+	import { Plus, Info } from 'lucide-svelte';
+	import Card from '@/components/custom/card.svelte';
+	import Spinner from '@/components/custom/spinner.svelte';
+	import Alert from '@/components/custom/alert.svelte';
+	import type { WebauthnCredentialsResponse } from '@/pocketbase/types';
 
 	const platformAuthenticatorAvailable = isPlatformAuthenticatorAvailable();
-	const recordType = createTypeProp<WebauthnCredentialsResponse<{ ID: string }>>();
-
 	const userEmailAddress = $currentUser?.email!;
-</script>
 
-<Heading tag="h6">Your devices</Heading>
-<P color="gray" size="sm">Manage the devices you use to login.</P>
+	// ts helper
 
-<CollectionManager
-	{recordType}
-	collection={Collections.WebauthnCredentials}
-	let:records
-	editFormSettings={{ exclude: ['user', 'credential'] }}
->
-	<div class="space-y-2 py-4">
-		{#each records as record}
-			{@const label = Boolean(record.description) ? record.description : record.credential?.ID}
-			<Card class="max-w-none">
-				<div class="flex justify-between gap-4 items-center">
-					<div class="w-0 grow overflow-hidden">
-						<P>{label}</P>
-					</div>
-					<div class="flex gap-2">
-						<EditRecord {record} />
-						<DeleteRecord {record} />
-					</div>
-				</div>
-			</Card>
-		{/each}
-	</div>
-</CollectionManager>
+	function getCredentialId(record: WebauthnCredentialsResponse): string {
+		// @ts-expect-error
+		return record.credential.ID ?? '';
+	}
+</script>
 
-{#await platformAuthenticatorAvailable}
-	<div class="flex flex-col items-center">
-		<Spinner />
-		<P>Checking your device</P>
+<div class="space-y-4">
+	<div class="space-y-1">
+		<T tag="h4">{m.Your_devices()}</T>
+		<T>{m.Manage_the_devices_you_use_to_login_()}</T>
 	</div>
-{:then response}
-	{#if !response || !isWebauthnSupported()}
-		<Alert color="yellow" class="mt-2">
-			<svelte:fragment slot="icon">
-				<InformationCircle />
-			</svelte:fragment>
-			<span>
-				Your device does not have integrated Webauthn support. An external authenticator is
-				required.
-			</span>
-		</Alert>
-	{/if}
-{/await}
 
-<div class="flex justify-end mt-2">
-	<Button
-		color="alternative"
-		on:click={() => {
-			registerUser(userEmailAddress, navigator.userAgent);
-		}}
+	<Separator></Separator>
+
+	<CollectionManager
+		collection="webauthnCredentials"
+		let:records
+		editFormFieldsOptions={{ exclude: ['user', 'credential'] }}
 	>
-		<Plus size="20" class="mr-1" /> Add a device
-	</Button>
+		<div class="space-y-2 py-4">
+			{#each records as record}
+				{@const label = Boolean(record.description) ? record.description : getCredentialId(record)}
+				<Card>
+					<div class="flex items-center justify-between gap-4">
+						<div class="w-0 grow overflow-hidden">
+							<T>{label}</T>
+						</div>
+						<div class="flex gap-2">
+							<RecordEdit {record} />
+							<RecordDelete {record} />
+						</div>
+					</div>
+				</Card>
+			{/each}
+		</div>
+	</CollectionManager>
+
+	{#await platformAuthenticatorAvailable}
+		<div class="flex flex-col items-center gap-2">
+			<Spinner />
+			<T>{m.Checking_your_device()}</T>
+		</div>
+	{:then response}
+		{#if !response || !isWebauthnSupported()}
+			<Alert variant="warning" icon={Info} let:Description>
+				<Description>
+					{m.Your_device_does_not_have_integrated_Webauthn_support_An_external_authenticator_is_required_()}
+				</Description>
+			</Alert>
+		{/if}
+	{/await}
+
+	<div class="mt-2 flex justify-end">
+		<Button
+			variant="outline"
+			on:click={() => {
+				registerUser(userEmailAddress, navigator.userAgent);
+			}}
+		>
+			<Icon src={Plus} mr />
+			{m.Add_a_device()}
+		</Button>
+	</div>
 </div>
