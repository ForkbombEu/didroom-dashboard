diff a/webapp/src/routes/[[lang]]/my/+layout.ts b/webapp/src/routes/[[lang]]/my/+layout.ts	(rejected hunks)
@@ -4,35 +4,39 @@ import { loadFeatureFlags } from '$lib/features';
 import { getUserPublicKeys } from '$lib/keypairoom/utils.js';
 import { getKeyringFromLocalStorage, matchPublicAndPrivateKeys } from '$lib/keypairoom/keypair';
 import { missingKeyringParam, welcomeSearchParamKey } from '$lib/utils/constants.js';
-import { error, redirect } from '@sveltejs/kit';
+import { error } from '@sveltejs/kit';
+import { redirect } from '$lib/i18n';
 
 //
 
-export const load = async () => {
+export const load = async ({ url }) => {
 	const features = await loadFeatureFlags();
 
-	if (!features.AUTH) throw error(404);
+	if (!features.AUTH) error(404);
 	else {
 		const isUserLogged = await verifyUser();
-		if (!isUserLogged) throw redirect(303, '/login');
+		if (!isUserLogged) redirect('/login', url);
 	}
 
 	if (features.KEYPAIROOM) {
 		const publicKeys = await getUserPublicKeys();
 		if (!publicKeys) {
-			throw redirect(303, `/keypairoom?${welcomeSearchParamKey}`);
+			redirect(`/keypairoom?${welcomeSearchParamKey}`, url);
+			return;
 		}
 
 		if (browser) {
 			const keyring = getKeyringFromLocalStorage();
+
 			if (!keyring) {
-				throw redirect(303, `/keypairoom/regenerate?${missingKeyringParam}`);
+				redirect(`/keypairoom/regenerate?${missingKeyringParam}`, url);
+				return;
 			}
 
 			try {
 				await matchPublicAndPrivateKeys(publicKeys, keyring);
 			} catch (e) {
-				throw redirect(303, `/keypairoom/regenerate?${missingKeyringParam}`);
+				redirect(`/keypairoom/regenerate?${missingKeyringParam}`, url);
 			}
 		}
 	}
