diff a/admin/pb_migrations/seed_test_data.js b/admin/pb_migrations/seed_test_data.js	(rejected hunks)
@@ -1,30 +1,19 @@
-const USERS_COLLECTION_NAME = "users";
+/// <reference path="../pb_data/types.d.ts" />
 
-const users = {
-    A: {
-        email: "userA@example.org",
-        password: "userAuserA",
-    },
-    B: {
-        email: "userB@example.org",
-        password: "userBuserB",
-    },
-    C: {
-        email: "userC@example.org",
-        password: "userCuserC",
-    },
-};
+const USERS_COLLECTION_NAME = "users";
 
 function createSampleUserData(letter) {
+    const name = `user${letter}`;
     return {
         email: `user${letter}@example.org`,
-        username: `user${letter}`,
+        username: name,
         password: `user${letter}user${letter}`,
+        name: name,
     };
 }
 
 function addSampleUser(dao, letter) {
-    const { email, username, password } = createSampleUserData(letter);
+    const { email, username, password, name } = createSampleUserData(letter);
     const collection = dao.findCollectionByNameOrId(USERS_COLLECTION_NAME);
 
     const record = new Record(collection);
@@ -32,6 +21,7 @@ function addSampleUser(dao, letter) {
     record.setEmail(email);
     record.setPassword(password);
     record.setVerified(true);
+    record.set("name", name);
     record.set("emailVisibility", true);
 
     dao.saveRecord(record);
@@ -39,11 +29,6 @@ function addSampleUser(dao, letter) {
     return record;
 }
 
-function removeUser(dao, email) {
-    const record = dao.findAuthRecordByEmail(USERS_COLLECTION_NAME, email);
-    dao.deleteRecord(record);
-}
-
 migrate(
     (db) => {
         const dao = new Dao(db);
